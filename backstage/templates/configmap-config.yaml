apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include ".backstage.fullName" . }}-app-config
  labels:
    {{- include "backstage.labels" . | nindent 4 }}  
data:
  app-confing.production.yaml: |-
    app:
      title: Mars's Backstage
      # Should be the same as backend.baseUrl when using the `app-backend` plugin.
      baseUrl: ${BACKSTAGE_BASE_URL}
    organization:
      name: Mars
    auth:
      environment: production
      providers:
        github:
          production:
            clientId: ${AUTH_GITHUB_CLIENT_ID}
            clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}
    backend:
      # Note that the baseUrl should be the URL that the browser and other clients
      # should use when communicating with the backend, i.e. it needs to be
      # reachable not just from within the backend host, but from all of your
      # callers. When its value is "http://localhost:7007", it's strictly private
      # and can't be reached by others.
      baseUrl: ${BACKSTAGE_BASE_URL}
      listen:
        port: 7007
        # The following host directive binds to all IPv4 interfaces when its value
        # is "0.0.0.0". This is the most permissive setting. The right value depends
        # on your specific deployment. If you remove the host line entirely, the
        # backend will bind on the interface that corresponds to the backend.baseUrl
        # hostname.
        host: 0.0.0.0
      # config options: https://node-postgres.com/api/client
      database:
        client: pg
        connection:
          host: ${POSTGRES_HOST}
          port: ${POSTGRES_PORT}
          user: ${POSTGRES_USER}
          password: ${POSTGRES_PASSWORD}
          # https://node-postgres.com/features/ssl
          # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
          # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
          # ssl:
          #   ca: # if you have a CA file and want to verify it you can uncomment this section
          #     $file: <file-path>/ca/server.crt
    integrations:
      github:
        - host: github.com
          apps:
          - appId: ${GITHUB_APP_ID}
            webhookUrl: ${AUTH_GITHUB_WEBHOOK_URL} #it might require a webhook url but a lot of examples just use smee.io
            clientId: ${AUTH_GITHUB_CLIENT_ID}
            clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}
            webhookSecret: "${AUTH_GITHUB_WEBHOOK_SECRET}"
            privateKey: ${AUTH_GITHUB_CLIENT_PRIVATE_KEY} #Private key from GitHub app in step 2
    catalog:
      locations:
        - type: url
          target: https://github.com/Mars-DNA/Backstage_Templates/blob/sample-template/scaffolder-templates/terraform-sample/template.yaml
          rules:
            - allow: [Template]
    techdocs:
      builder: 'local'
      publisher:
        type: 'local'
      generator:
        runIn: local # They don't recommend this in production.